Word Prediction Application - Coursera Data Science Specialization  
Word Prediction Application - Capstone
========================================================
author: Nazmi Anik
date: 12/23/2016
autosize: false

<p style="font-size:30px">Purpose of this presentation is to give an overview of the application to predict next word in text input and offer future enhancements.</p>

<p style="font-size:30px">This application is developed for the Coursera Data Science Specialization - Data Science Capstone class.</p>

Data Sources
========================================================

The data that is used for this project is taken from [this link]("https://d396qusza40orc.cloudfront.net/dsscapstone/dataset/Coursera-SwiftKey.zip"). Only the English language files are used for the purpose of this application.

Below are the word and line counts of the files used for learning word relationships.

| Counts | Blogs | News | Twitter |
|:-----:|:----:|:-------:|:------:|
|   lines  |  899288  |    77259   |    2360148  |
|  words  |  37546246 |   2674536   |   30093369  |

Due to the size of the dataset, the data is sampled at 1/50 ratio to make the calculations faster and the initial load in a reasonable time. It takes about 10 seconds to initialize. But then the calculations are relatively faster afterwards.

Data Cleaning and Prediction
========================================================

After the sampling, data is cleaned to increase the accuracy of the prediction. All words are transformed to lowercase. The punctuation, numbers, emoticons and extra spaces are removed. For the emoticons, a library called *qdapRegex* is used. Finally profanities are also removed that are grabbed from [this link](https://gist.github.com/ryanlewis/a37739d710ccdb4b406d).

After the data is cleaned, it is tokenized into N-Grams. Simply put, occurances of words alone, word pairs, word triplets and word quartets in our source data are grouped together and sorted according to how often they appeared.

If the given input is not match anything in the word quartets, then we back-off and try to find observations of last two words in word triplets, then in word pairs, and finally the 5 most commonly used single words as predictions.

Future Enhancements
========================================================

- Currently when a user inputs words, the last three are checked and matched with first three words of 4-gram. Based on occurance frequency, the most commonly occuring words as the upcoming fourth word is returned. We back off to 3-grams, 2-grams and 1-gram if matches are not found. A future release may assign probabilities/weights to all N-grams and make more educated guesses.

- To improve accuracy further, instead of using blogs, tweets and news sources combined, one kind of input could be used based on where the application will be used.

- A loading message warning the user while the data load is going on could be helpful to make sure the user sticks around.

Application and Source Code
========================================================

Here is how the application looks:
![Application Screenshot](app.png)  
User enters word in the text box on the left side. Then up to five possible word predictions are listed on the right side.

The link to the application is [here](https://finishim.shinyapps.io/WordPredict/).  
The link to the source code is [here](https://github.com/finishim/WordPredict).